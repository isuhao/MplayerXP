#!/bin/sh

. ../functions

# The simplest configure for win loader
for parm in "$@" ; do
  if test "$parm" = "--help" || test "$parm" = "-help" || test "$parm" = "-h" ; then
    cat << EOF

Usage: $0 [OPTIONS]...

Configuration:
  -h, --help               display this help and exit

Installation directories:
  --prefix=DIR           use this prefix for installing mplayer [/usr/local]

Fine tuning of the installation directories:
  --datadir=DIR          use this prefix for installing machine independent
                         data files (fonts, skins) [PREFIX/share/mplayer]
  --confdir=DIR          use this prefix for installing configuration files
                         [same as datadir]
  --libdir=DIR           use this prefix to specify library location
                         [PREFIX/lib]
  --codecdir=DIR         use this prefix for installing shared libraries
                         [LIBDIR/mplayerxp]
  --win32libdir=DIR      use this prefix to specify win32 .dll locations [/usr/lib/win32]

System types:
  --build=BUILD          configure for building on BUILD [guessed]
  --host=HOST            cross-compile to build program to run on HOST [BUILD]

Program names:
  --program-suffix=SUFX  append SUFX to installed program names

Use these options if autodetection fails:
  --asflags=ASFLAGS       add ASFLAGS to [$ASFLAGS]
  --cflags=ECFLAGS        add ECFLAGS to CFLAGS [$CFLAGS]
  --ldflags=ELDFLAGS      add ELDFLAGS to LDFLAGS [$LDFLAGS]
  --extralibs=ELIBS       add ELIBS [$ELIBS]

Miscellaneous options:
  --cc=COMPILER          use this C compiler to build MPlayer [gcc]
  --enable-debug[=1-3]   compile debugging information into mplayer [disable]
  --enable-profile       compile profiling information into mplayer [disable]
  --disable-fastcall     disable regparm method on x86 systems [autodetect]

Environment variables:
  MAKE      Make command (example: "make -j")
  AS        Assembler command
  CC        C compiler command (example: "gcc -m64 -mveclibabi=acml")
  CFLAGS    C compiler flags (example:
             "-O3 -msse -msse2 -msse3 -mfpmath=387,sse -mfancy-math-387
              -ffast-math -funroll-all-loops -ftree-loop-optimize
              -ftree-vect-loop-version -ftree-vectorize -fomit-frame-pointer
              -finline-functions-called-once -funit-at-a-time -pipe")
  LDFLAGS   linker flags, e.g. -L<lib dir> if you have libraries in a
            nonstandard directory <lib dir>
  LIBS      specifies additional libs (like: export LIBS=-lacml_mv)
  DESTDIR   specifies base of installation

EOF
    exit 0
  fi
done # for parm in ...

# Check how echo works in this /bin/sh
case `echo -n` in
  -n)	_echo_n=	_echo_c='\c'	;;	# SysV echo
  *)	_echo_n='-n '	_echo_c=	;;	# BSD echo
esac

# LGB: temporary files
for I in "$TMPDIR" "$TEMPDIR" "/tmp" ; do
  test "$I" && break
done

mktmps

ENABLED_LIST='
    fastcall
    shared
'

DISABLED_LIST='
    gcov
    profile
    static
'

enable $ENABLED_LIST
disable $DISABLED_LIST

AUTOCONF_LIST="
    $ENABLED_LIST
    $DISABLED_LIST
"

PATH_LIST='
    prefix
    datadir
    confdir
    libdir
    codecdir
    win32libdir
'

SYSCONF_LIST="
    build
    host
    cc
    as
    ld
    ldconfig
    install
    program_suffix
    $PATH_LIST
"

EXTRA_LIST='
    asflags
    cflags
    ldflags
    extralibs
'

cc=gcc
test "$CC" && cc="$CC"
prefix="/usr/local"
fastcall=auto
for ac_option do
  optval="${ac_option#*=}"
  case "$ac_option" in
  --enable-debug)
    debug='-g'
    ;;
  --enable-debug=*)
    debug=`echo $_echo_n '-g'$_echo_c; echo $ac_option | cut -d '=' -f 2`
    ;;
  --enable-*=*|--disable-*=*)
    eval $(echo "${ac_option%%=*}" | sed 's/--/action=/;s/-/ thing=/')
    is_in ${thing} $AUTOCONF_LIST || bad_options="$ac_option $bad_options"
    if test "$action" = "disable"; then
      test "${optval}" = "no" && action=enable
    else
      test "${optval}" = "no" && action=disable
    fi
    $action ${thing}
    ;;

    --enable-?*|--disable-?*)
    eval $(echo "$ac_option" | sed 's/--/action=/;s/-/ thing=/;s/-/_/g')
    is_in ${thing} $AUTOCONF_LIST || bad_options="$ac_option $bad_options"
    $action ${thing}
    ;;
    *)
    optname="${ac_option%%=*}"
    optname="${optname#--}"
    optname=$(echo "$optname" | sed 's/-/_/g')
    if is_in $optname $SYSCONF_LIST; then
        eval $optname=$optval
    elif is_in $optname $EXTRA_LIST; then
	action="add_$optname"
	$action ${optval}
    else
        bad_options="$ac_option $bad_options"
    fi
    ;;
  esac
done

enabled profile     && add_ldflags "-pg"
test -n $debug      && add_ldflags $debug

if enabled gcov ; then
add_cflags "-fprofile-arcs -ftest-coverage"
add_extralibs "-lgcov"
fi

guess_target config.mak config.h
test_optimizations config.mak config.h

test -n "$ld_extra"	&& add_extralibs $ld_extra
test -n "$exld_flags"	&& add_ldflags $exld_flags
test -n "$inc_extra"	&& add_cflags $inc_extra

if win32 ; then
    def_win32_cmt='/* using native windows system */'
    def_win32_loader='#undef WIN32_LOADER'
else
    def_win32_cmt='/* using non-native windows system */'
    def_win32_loader='#define WIN32_LOADER 1'
fi

echo -n "Checking for win32 dll's ... "
if test -z "$win32libdir" ; then
  for I in /usr/local/lib/win32 /usr/lib/win32 ; do
    if test -d "$I" ; then
      win32libdir="$I"
      break;
    fi;
  done
fi
echo "$win32libdir"

echocheck "Program name"
prog_alias="mplayerxp$program_suffix"
echores "$prog_alias"
# Atmos: moved this here, to be correct, if --prefix is specified
test -z "$datadir" && datadir="$prefix/share/$prog_alias"
test -z "$confdir" && confdir="$datadir"
test -z "$libdir" && libdir="$prefix/lib"
test -z "$codecdir" && codecdir="$libdir/$prog_alias"

cc_version=`$cc -dumpversion`
if test "$fastcall" = auto ; then
echocheck "__fastcall optimization abilities"
case $cc_version in
    '')
      fastcall=no
      ;;
    # avoid fastcall usage on gcc-2.95.2 and older
    2.95.[3-9]|2.95.[3-9].[0-9]|3.[0-9]|3.[0-9].[0-9]|4.[0-9].[0-9])
      fastcall=yes
      ;;
    *)
      fastcall=no
      ;;
esac
echores "$fastcall"
fi


test -n "$profile"	&& disable fastcall
print_config __USE mp_config.h mp_config.mak fastcall

if test "$profile" || test "$debug" ; then
cat >> config.h << EOF
#define DEBUG
EOF
fi

require2 vsscanf "stdio.h stdarg.h" vsscanf
print_config HAVE_ config.h config.mak vsscanf

check_func2 "sys/types.h sys/mman.h" mmap
mman_h=$mmap
print_config HAVE_SYS_ config.h config.mak mman_h

add_cflags "-Werror-implicit-function-declaration"

#############################################################################
echo "Creating config.mak"
cat >> config.mak << EOF
# -------- Generated by configure -----------
PROGNAME = $prog_alias
prefix = $prefix
DATADIR = $datadir
CONFDIR = $confdir
LIBDIR = $libdir
CODECDIR = $codecdir
CONFDIR = $confdir
DESTDIR = $DESTDIR
WIN32_PATH = -DWIN32_PATH=\\"$win32libdir\\"
CFLAGS = $CFLAGS
CC=$cc

EOF

echo "EXTRALIBS=$extralibs" >> config.mak
echo "LDFLAGS=$LDFLAGS" >> config.mak
echo "ASFLAGS=$ASFLAGS" >> config.mak

#############################################################################
echo "Creating config.h"
cat >> config.h << EOF
/* -------- This file has been automatically generated by configure --------- */

/* Common data directory (for fonts, etc) */
#define PROGNAME "$prog_alias"
#define DATADIR "$datadir"
#define CONFDIR "$confdir"
#define LIBDIR "$libdir"
#define CODECDIR "$codecdir"

#ifdef DEBUG
#define TRACE printf
#define dbg_printf printf
#else
#define TRACE(...)
#define dbg_printf(...)
#endif

$def_win32_cmt
$def_win32_loader

/* Defined to some form of __attribute__ ((...)) if the compiler supports
   a different, more efficient calling convention.  */
#if defined ( __USE_FASTCALL ) && defined ( ARCH_X86 )
/*# define internal_function __attribute__ ((regparm (3), stdcall))*/
# define __FASTCALL__ __attribute__ ((regparm (3)))
#else
# define __FASTCALL__
#endif

EOF

# Last move:
rmtmps

