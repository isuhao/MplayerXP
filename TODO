TODO for mplayerxp:

- Move vo_data and ao_data into private of vf_vo and af_ao2 or into
  MPXPCtx at least.
- Problem: it seems that demuxer doesn't differ bitmap-based subtitles from
  Closed Caption (plain ascii-text) ones. Because of this some demuxer's
  parser call video-driver directly to render subtitle on screen that breaks
  security issues and re-enterability of module-based architecture.
- use licences for anti-viral protection.
  Idea:
   Each pointer on context of driver must be crypted to make context substitution
   more than visible. Example:
     dec_video: mpvc_init(...,uint32_t pin) {
		...
		if(vd_driver->id!=RND_VDRIVER_ID) exit(0); // minimal test
		...
		license=check_pin(Module_VideoDecoder,pin);
		...
     vd_ffmpeg: init(sh_video_t *sh,any_t* libinput,uint32_t license) {
		    check_license(Module_VideoDecoder,license);
		    ...
		    PointerProtector lavc_guard(license);
		    priv->lavc_ctx = lavc_guard.protect(avcodec_alloc_context3(priv->codec));
		    ...
		    if(avcodec_open2(lavc_guard.unprotect(priv->ctx),priv->codec,NULL)<0){
		    ...
- use libavfilter instead of some af_* vf_*
- test frame-dropping
- remove all #define with values (they maybe intercepted in other .h files)
- add anti-viral protection for QOS("Query of Service")
  to not be a virus' servant [code_walker, gotoist ?]
- add passport control for drivers as one of anti-viral traps.
- add possibility to DISABLE osd.level=2 from cmd line and from keyboard
***
- replace built-in asm with "mmintrin" extensions of GCC (alse available in MSVC, ICC, ...)
- replace network support with using of libavformat
- implement distributed video playback with using of PVM. (need volunteers)
- run filters in independent threads (useful for encoding)
- use original wine instead of loader. (adapt DMO_filter.so for wine)
- redesign demux_mkv and other in demux_asf like manner. (will allow to avoid 1
  unnecessary memcpy for input video bandwidth)
- remove DEMUXER_TYPE_* and STREAMTYPE_* (make modules in libmpdemux more
  independent ones)
